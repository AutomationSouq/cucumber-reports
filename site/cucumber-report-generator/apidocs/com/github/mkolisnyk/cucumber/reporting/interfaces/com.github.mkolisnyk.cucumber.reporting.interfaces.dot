#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// com.github.mkolisnyk.cucumber.reporting.interfaces.SimpleReport
	c117 [label=<<table title="com.github.mkolisnyk.cucumber.reporting.interfaces.SimpleReport" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./SimpleReport.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> SimpleReport </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + SimpleReport() </td></tr>
<tr><td align="left" balign="left"> + SimpleReport(extendedOptions : ExtendedRuntimeOptions) </td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + execute() </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + execute(formats : String[]) </font></td></tr>
		</table></td></tr>
		</table>>, URL="./SimpleReport.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// com.github.mkolisnyk.cucumber.reporting.interfaces.KECompatibleReport
	c118 [label=<<table title="com.github.mkolisnyk.cucumber.reporting.interfaces.KECompatibleReport" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./KECompatibleReport.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> KECompatibleReport </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + KECompatibleReport() </td></tr>
<tr><td align="left" balign="left"> + KECompatibleReport(extendedOptions : ExtendedRuntimeOptions) </td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + execute(batch : KnownErrorsModel, aggregate : boolean, formats : String[]) </font></td></tr>
<tr><td align="left" balign="left"> + execute(batch : KnownErrorsModel) </td></tr>
<tr><td align="left" balign="left"> + execute(config : File, aggregate : boolean, formats : String[]) </td></tr>
<tr><td align="left" balign="left"> + execute(config : File, aggregate : boolean) </td></tr>
		</table></td></tr>
		</table>>, URL="./KECompatibleReport.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// com.github.mkolisnyk.cucumber.reporting.interfaces.CucumberResultsCommon
	c119 [label=<<table title="com.github.mkolisnyk.cucumber.reporting.interfaces.CucumberResultsCommon" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./CucumberResultsCommon.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> CucumberResultsCommon </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + CHART_WIDTH : int </td></tr>
<tr><td align="left" balign="left"> + CHART_HEIGHT : int </td></tr>
<tr><td align="left" balign="left"> + CHART_THICKNESS : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + CucumberResultsCommon() </td></tr>
<tr><td align="left" balign="left"> + CucumberResultsCommon(extendedOptions : ExtendedRuntimeOptions) </td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getReportType() : CucumberReportTypes </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getReportDocLink() : CucumberReportLink </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + validateParameters() </font></td></tr>
<tr><td align="left" balign="left"> + constructErrorMessage(error : CucumberReportError, suffix : String) : String </td></tr>
<tr><td align="left" balign="left"> + getOutputDirectory() : String </td></tr>
<tr><td align="left" balign="left"> + setOutputDirectory(outputDirectoryValue : String) </td></tr>
<tr><td align="left" balign="left"> + getOutputName() : String </td></tr>
<tr><td align="left" balign="left"> + setOutputName(outputNameValue : String) </td></tr>
<tr><td align="left" balign="left"> + getSourceFile() : String </td></tr>
<tr><td align="left" balign="left"> + setSourceFile(sourceFileValue : String) </td></tr>
<tr><td align="left" balign="left"> + getSourceFiles() : String[] </td></tr>
<tr><td align="left" balign="left"> + setSourceFiles(sourceFilesValue : String[]) </td></tr>
<tr><td align="left" balign="left"> + getPdfPageSize() : String </td></tr>
<tr><td align="left" balign="left"> + setPdfPageSize(pdfPageSizeValue : String) </td></tr>
<tr><td align="left" balign="left"> + isImageExportable() : boolean </td></tr>
<tr><td align="left" balign="left"> + getTemplatesLocation() : String </td></tr>
<tr><td align="left" balign="left"> + setTemplatesLocation(templatesLocation : String) </td></tr>
<tr><td align="left" balign="left"> + readFileContent(sourceFileValue : String) : CucumberFeatureResult[] </td></tr>
<tr><td align="left" balign="left"> + dumpOverviewStats(outFile : File, results : CucumberFeatureResult[]) </td></tr>
<tr><td align="left" balign="left"> + replaceSvgWithPng(htmlFile : File) : String </td></tr>
<tr><td align="left" balign="left"> # generateReportFromTemplate(outFile : File, templateName : String, bean : T) </td></tr>
<tr><td align="left" balign="left"> + export(htmlFile : File, suffix : String, formats : String[], isImageExportable : boolean) </td></tr>
<tr><td align="left" balign="left"> + getStatuses(results : CucumberFeatureResult[]) : int[][] </td></tr>
		</table></td></tr>
		</table>>, URL="./CucumberResultsCommon.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// com.github.mkolisnyk.cucumber.reporting.interfaces.ConfigurableReport<Model>
	c120 [label=<<table title="com.github.mkolisnyk.cucumber.reporting.interfaces.ConfigurableReport" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ConfigurableReport.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> ConfigurableReport&lt;Model&gt; </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ConfigurableReport() </td></tr>
<tr><td align="left" balign="left"> + ConfigurableReport(extendedOptions : ExtendedRuntimeOptions) </td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + execute(batch : Model, aggregate : boolean, formats : String[]) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + execute(config : File, aggregate : boolean, formats : String[]) </font></td></tr>
<tr><td align="left" balign="left"> + execute(aggregate : boolean, formats : String[]) </td></tr>
<tr><td align="left" balign="left"> + execute(formats : String[]) </td></tr>
<tr><td align="left" balign="left"> + execute(batch : Model, formats : String[]) </td></tr>
<tr><td align="left" balign="left"> + execute(config : File, formats : String[]) </td></tr>
		</table></td></tr>
		</table>>, URL="./ConfigurableReport.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// com.github.mkolisnyk.cucumber.reporting.interfaces.AggregatedReport
	c121 [label=<<table title="com.github.mkolisnyk.cucumber.reporting.interfaces.AggregatedReport" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AggregatedReport.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> AggregatedReport </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + AggregatedReport() </td></tr>
<tr><td align="left" balign="left"> + AggregatedReport(extendedOptions : ExtendedRuntimeOptions) </td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + execute(aggregate : boolean, formats : String[]) </font></td></tr>
<tr><td align="left" balign="left"> + execute(aggregate : boolean) </td></tr>
<tr><td align="left" balign="left"> + execute() </td></tr>
<tr><td align="left" balign="left"> + aggregateResults(input : CucumberFeatureResult[], collapse : boolean) : CucumberFeatureResult[] </td></tr>
<tr><td align="left" balign="left"> + readFileContent(sourceFileValue : String, aggregate : boolean) : CucumberFeatureResult[] </td></tr>
<tr><td align="left" balign="left"> + readFileContent(aggregate : boolean) : CucumberFeatureResult[] </td></tr>
		</table></td></tr>
		</table>>, URL="./AggregatedReport.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	//com.github.mkolisnyk.cucumber.reporting.interfaces.SimpleReport extends com.github.mkolisnyk.cucumber.reporting.interfaces.CucumberResultsCommon
	c119:p -> c117:p [dir=back,arrowtail=empty];
	//com.github.mkolisnyk.cucumber.reporting.interfaces.KECompatibleReport extends com.github.mkolisnyk.cucumber.reporting.interfaces.ConfigurableReport<com.github.mkolisnyk.cucumber.reporting.types.knownerrors.KnownErrorsModel>
	c120:p -> c118:p [dir=back,arrowtail=empty];
	//com.github.mkolisnyk.cucumber.reporting.interfaces.ConfigurableReport<Model> extends com.github.mkolisnyk.cucumber.reporting.interfaces.AggregatedReport
	c121:p -> c120:p [dir=back,arrowtail=empty];
	//com.github.mkolisnyk.cucumber.reporting.interfaces.AggregatedReport extends com.github.mkolisnyk.cucumber.reporting.interfaces.SimpleReport
	c117:p -> c121:p [dir=back,arrowtail=empty];
}

