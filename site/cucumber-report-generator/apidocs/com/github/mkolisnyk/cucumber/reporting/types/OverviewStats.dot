#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// com.github.mkolisnyk.cucumber.reporting.types.OverviewStats
	c10692 [label=<<table title="com.github.mkolisnyk.cucumber.reporting.types.OverviewStats" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./OverviewStats.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> OverviewStats </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + OverviewStats() </td></tr>
<tr><td align="left" balign="left"> + getFeaturesPassed() : int </td></tr>
<tr><td align="left" balign="left"> + getFeaturesFailed() : int </td></tr>
<tr><td align="left" balign="left"> + getFeaturesUndefined() : int </td></tr>
<tr><td align="left" balign="left"> + getFeaturesTotal() : int </td></tr>
<tr><td align="left" balign="left"> + getScenariosPassed() : int </td></tr>
<tr><td align="left" balign="left"> + getScenariosFailed() : int </td></tr>
<tr><td align="left" balign="left"> + getScenariosUndefined() : int </td></tr>
<tr><td align="left" balign="left"> + getScenariosTotal() : int </td></tr>
<tr><td align="left" balign="left"> + getStepsPassed() : int </td></tr>
<tr><td align="left" balign="left"> + getStepsFailed() : int </td></tr>
<tr><td align="left" balign="left"> + getStepsUndefined() : int </td></tr>
<tr><td align="left" balign="left"> + getStepsTotal() : int </td></tr>
<tr><td align="left" balign="left"> + getOverallDuration() : float </td></tr>
<tr><td align="left" balign="left"> + getFeaturesKnown() : int </td></tr>
<tr><td align="left" balign="left"> + getScenariosKnown() : int </td></tr>
<tr><td align="left" balign="left"> + getStepsKnown() : int </td></tr>
<tr><td align="left" balign="left"> + addFeaturesPassed(featuresPassedValue : int) </td></tr>
<tr><td align="left" balign="left"> + addFeaturesFailed(featuresFailedValue : int) </td></tr>
<tr><td align="left" balign="left"> + addFeaturesUndefined(featuresUndefinedValue : int) </td></tr>
<tr><td align="left" balign="left"> + addScenariosPassed(scenariosPassedValue : int) </td></tr>
<tr><td align="left" balign="left"> + addScenariosFailed(scenariosFailedValue : int) </td></tr>
<tr><td align="left" balign="left"> + addScenariosUndefined(scenariosUndefinedValue : int) </td></tr>
<tr><td align="left" balign="left"> + addStepsPassed(stepsPassedValue : int) </td></tr>
<tr><td align="left" balign="left"> + addStepsFailed(stepsFailedValue : int) </td></tr>
<tr><td align="left" balign="left"> + addStepsUndefined(stepsUndefinedValue : int) </td></tr>
<tr><td align="left" balign="left"> + addOverallDuration(overallDurationValue : float) </td></tr>
<tr><td align="left" balign="left"> + addFeaturesKnown(featuresKnownValue : int) </td></tr>
<tr><td align="left" balign="left"> + addScenariosKnown(scenariosKnownValue : int) </td></tr>
<tr><td align="left" balign="left"> + addStepsKnown(stepsKnownValue : int) </td></tr>
<tr><td align="left" balign="left"> + add(other : OverviewStats) : OverviewStats </td></tr>
<tr><td align="left" balign="left"> + valuate(scenario : CucumberScenarioResult) : OverviewStats </td></tr>
<tr><td align="left" balign="left"> + valuate(result : CucumberFeatureResult) : OverviewStats </td></tr>
<tr><td align="left" balign="left"> + valuate(results : CucumberFeatureResult[]) : OverviewStats </td></tr>
<tr><td align="left" balign="left"> + getFeatureStatus() : String </td></tr>
<tr><td align="left" balign="left"> + getScenarioStatus() : String </td></tr>
<tr><td align="left" balign="left"> + isEmpty() : boolean </td></tr>
		</table></td></tr>
		</table>>, URL="./OverviewStats.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
}

